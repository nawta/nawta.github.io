{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-project-query-tsx-content-file-path-content-projects-traverco-ar-index-mdx-680d631bd500f8bda75f.js","mappings":"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","sources":["webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/header-project.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/project-pagination.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/project.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/project.tsx","webpack://emilia/./content/projects/travercoAR/index.mdx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/project-query.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { Flex, jsx, Container, Heading } from \"theme-ui\"\nimport { Themed } from \"@theme-ui/mdx\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport HeaderBackground from \"./header-background\"\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\nimport Svg from \"./svg\"\n\ntype HeaderProjectProps = {\n  title: string\n  areas: string[]\n  description?: string\n  date: string\n}\n\ntype AvatarStaticQuery = {\n  file: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nconst HeaderProject = ({ title, areas, description = ``, date }: HeaderProjectProps) => {\n  const { name } = useEmiliaConfig()\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\n    query {\n      file(name: { eq: \"avatar\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 40, height: 40, quality: 100)\n        }\n      }\n    }\n  `)\n\n  const titleProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const backButtonProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(-30px, 0, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const infoProps = useSpring({ config: config.slow, delay: 500, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Flex as=\"header\" variant=\"layout.header\">\n      <HeaderBackground />\n      <Container sx={{ textAlign: `center`, my: 4, zIndex: 10 }}>\n        <animated.div style={backButtonProps}>\n          <Link\n            to=\"/\"\n            aria-label={`${name} - Back to homepage`}\n            sx={{\n              display: `flex`,\n              alignItems: `center`,\n              color: `text`,\n              textDecoration: `none`,\n              svg: {\n                transition: `transform 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955)`,\n              },\n              \"&:hover, &:focus\": { svg: { transform: `translateX(-6px)` } },\n            }}\n          >\n            <Svg id=\"leftArrow\" width=\"20\" height=\"18\" />\n            <div\n              sx={{\n                overflow: `hidden`,\n                borderRadius: `full`,\n                width: `40px`,\n                height: `40px`,\n                display: `inline-block`,\n                boxShadow: `md`,\n                mx: 2,\n              }}\n            >\n              {avatar?.file?.childImageSharp?.gatsbyImageData && (\n                <GatsbyImage image={avatar.file.childImageSharp.gatsbyImageData} alt=\"Avatar\" />\n              )}\n            </div>\n            <span sx={{ fontWeight: `medium` }}>{name}</span>\n          </Link>\n        </animated.div>\n        <div sx={{ mt: 4, mb: [6, 6, 7] }}>\n          <animated.div style={titleProps}>\n            <Heading as=\"h1\" variant=\"styles.h1\">\n              {title}\n            </Heading>\n          </animated.div>\n          <animated.div style={infoProps}>\n            <Themed.p sx={{ mb: 0, mt: 4 }}>{date}</Themed.p>\n            <div>\n              {areas.map((area, index) => (\n                <React.Fragment key={area}>\n                  {index > 0 && `, `}\n                  {area}\n                </React.Fragment>\n              ))}\n            </div>\n            {description && (\n              <div sx={{ maxWidth: `900px`, mx: `auto`, mt: 5, p: { textAlign: `left`, overflowWrap: `break-word` } }}>\n                {description}\n              </div>\n            )}\n          </animated.div>\n        </div>\n      </Container>\n    </Flex>\n  )\n}\n\nexport default HeaderProject\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Card from \"./card\"\n\ntype ProjectPaginationProps = {\n  prev: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n  next: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n}\n\nconst ProjectPagination = ({ prev, next }: ProjectPaginationProps) => (\n  <div sx={{ mt: 6, mb: 4 }}>\n    <div sx={{ display: `grid`, gridTemplateColumns: `250px 1fr`, alignItems: `center`, mb: 4 }}>\n      <h2\n        sx={{\n          color: `textMuted`,\n          fontWeight: `medium`,\n          letterSpacing: `widest`,\n          textTransform: `uppercase`,\n          fontSize: 1,\n          my: 0,\n        }}\n      >\n        More Projects\n      </h2>\n      <div sx={{ width: `100%`, height: `2px`, backgroundColor: `muted` }} />\n    </div>\n    <div\n      sx={{\n        display: `grid`,\n        gridTemplateColumns: [`1fr`, `1fr`, `1fr 1fr`],\n        gridGap: [4, 4, 5],\n        a: { position: `relative` },\n        \"[data-name='card-overlay']\": {\n          position: `absolute`,\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        },\n      }}\n    >\n      {prev && <Card item={prev} />}\n      {next && <Card item={next} />}\n    </div>\n  </div>\n)\n\nexport default ProjectPagination\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Container } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport HeaderProject from \"./header-project\"\nimport ProjectPagination from \"./project-pagination\"\nimport Seo from \"./seo\"\n\nexport type EmiliaProjectProps = {\n  project: {\n    excerpt: string\n    date: string\n    slug: string\n    title: string\n    areas: string[]\n    cover: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n  images: {\n    nodes: {\n      name: string\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }[]\n  }\n}\n\nexport type EmiliaProjectPageContext = {\n  prev: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n  next: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n}\n\nconst Project: React.FC<React.PropsWithChildren<PageProps<EmiliaProjectProps, EmiliaProjectPageContext>>> = ({\n  data: { project, images },\n  pageContext: { prev, next },\n  children,\n}) => {\n  const imageFade = useSpring({ config: config.slow, delay: 800, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Layout>\n      <HeaderProject title={project.title} description={children} areas={project.areas} date={project.date} />\n      <Container sx={{ mt: [`-6rem`, `-6rem`, `-8rem`] }}>\n        {images.nodes.map((image) => (\n          <animated.div key={image.name} style={imageFade}>\n            <GatsbyImage\n              image={image.childImageSharp.gatsbyImageData}\n              alt={image.name}\n              sx={{ mb: [4, 4, 5], boxShadow: `xl` }}\n            />\n          </animated.div>\n        ))}\n        <ProjectPagination prev={prev} next={next} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Project\n\nexport const Head: HeadFC<EmiliaProjectProps> = ({ data: { project } }) => (\n  <Seo\n    title={project.title}\n    description={project.excerpt}\n    pathname={project.slug}\n    image={project.cover.childImageSharp.resize.src}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Project, { Head, EmiliaProjectProps, EmiliaProjectPageContext } from \"../../../components/project\"\n\nexport default function EmiliaCoreProject({ ...props }: PageProps<EmiliaProjectProps, EmiliaProjectPageContext>) {\n  return <Project {...props} />\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"現代において，\\r\\n世界中の人間とコミュニケーションを取るのは仕事や私生活において必須になっており，\\r\\n中には母国語が異なる人とコミュニケーションを行う場面も多く存在する．\\r\\n現在，\\r\\n人々は世界的な共通言語である英語を習得しコミュニケーションを取ることが多い．\\r\\nしかし、\\r\\n非母国語の習得には膨大な時間がかかるため、\\r\\n数多くの英語話者は言語の理解能力や発言能力が不十分なまま会話を行わざるを得ない．\\r\\nこれに対し，\\r\\n通訳者，\\r\\nまたは通訳アプリなどの母国語が異なる人同士が会話を行うための補助が提案および実装されてきた．\\r\\nしかし，\\r\\n通訳者や通訳アプリといったaudio-to-audio型の通訳機構を介すると，\\r\\n発話にかかる時間分のタイムラグが生じ，\\r\\n伝達される情報量に対する所要時間は延びてしまう．\\r\\nまた，\\r\\naudio-to-text型の既存の実時間翻訳システムは持ち手が塞がる，\\r\\nおよび会話の際に相手の表情や動きが見えない問題がある．\"), \"\\n\", React.createElement(_components.p, null, \"よって，\\r\\n我々はARグラス上に字幕翻訳を表示し，\\r\\n母国語が違う者同士の会話を補助するシステムを提案する．\\r\\n実時間な字幕翻訳を表示することにより，\\r\\n母国語が違う者同士であっても，\\r\\nそれぞれの母国語を用いて会話を行うことができる．\\r\\nさらに，\\r\\nARグラスを用いることにより，\\r\\n相手の表情やジェスチャなどのノンバーバルな動作を確認しながら会話を行うことができる．\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"D:/a/nawta.github.io/nawta.github.io/content/projects/travercoAR/index.mdx\";\nimport ProjectComponent, {Head} from \"../components/project\";\nProjectComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2283158628\";\n"],"names":["_ref","_avatar$file","_avatar$file$childIma","title","areas","description","date","name","useEmiliaConfig","avatar","useStaticQuery","titleProps","useSpring","config","slow","from","opacity","transform","to","backButtonProps","infoProps","delay","jsx","Flex","as","variant","HeaderBackground","Container","sx","textAlign","my","zIndex","animated","div","style","Link","display","alignItems","color","textDecoration","svg","transition","Svg","id","width","height","overflow","borderRadius","boxShadow","mx","file","childImageSharp","gatsbyImageData","GatsbyImage","image","alt","fontWeight","mt","mb","Heading","Themed","p","map","area","index","React","key","maxWidth","overflowWrap","prev","next","gridTemplateColumns","letterSpacing","textTransform","fontSize","backgroundColor","gridGap","a","position","top","left","right","bottom","Card","item","data","project","images","pageContext","children","imageFade","Layout","HeaderProject","nodes","ProjectPagination","Head","_ref2","Seo","excerpt","pathname","slug","cover","resize","src","EmiliaCoreProject","props","Project","_createMdxContent","_components","Object","assign","_provideComponents","components","wrapper","MDXLayout","GatsbyMDXWrapper","ProjectComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}