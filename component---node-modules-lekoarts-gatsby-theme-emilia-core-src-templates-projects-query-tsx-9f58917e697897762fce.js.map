{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-projects-query-tsx-9f58917e697897762fce.js","mappings":"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","sources":["webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/projects.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/projects-query.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/projects.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/assets/location.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/header.tsx"],"sourcesContent":["/** @jsx jsx */\n/* eslint no-shadow: 0 */\nimport { jsx, Container, Themed, Box } from \"theme-ui\"\nimport { useSpring, animated, config } from \"react-spring\"\nimport { rgba } from \"polished\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport Header from \"./header\"\nimport Card from \"./card\"\n\ntype Props = {\n  projects: {\n    slug: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }[]\n}\n\nconst Projects = ({ projects }: Props) => {\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    delay: 600,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n\n  if (projects.length === 0) {\n    return (\n      <Layout>\n        <Header />\n        <Container>\n          <Themed.p>\n            Hi!{` `}\n            <span role=\"img\" aria-label=\"Wave emoji\">\n              ðŸ‘‹\n            </span>\n            {` `}\n            <br />\n            Thanks for using <b>@lekoarts/gatsby-theme-emilia</b>. You currently don't have any content in your{` `}\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emilia\">\n              README\n            </Themed.a>\n            {` `}\n            to learn how to setup them.\n          </Themed.p>\n          <Themed.p>\n            <b>TL;DR:</b> <br />\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\n            Edit the frontmatter like described in the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emilia\">\n              README\n            </Themed.a>\n            .\n          </Themed.p>\n        </Container>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>\n      <Header />\n      <Box as=\"main\" variant=\"layout.main\">\n        <animated.div style={fadeUpProps}>\n          <Container\n            sx={{\n              mt: `-8rem`,\n              display: `grid`,\n              gridTemplateColumns: [`1fr`, `repeat(auto-fill, minmax(350px, 1fr))`],\n              gridGap: 4,\n              alignItems: `flex-start`,\n            }}\n          >\n            {projects.map((project, index) => {\n              const val = project.cover.childImageSharp.gatsbyImageData.backgroundColor as string\n              const shadow = rgba(val, 0.15)\n\n              const px = [`64px`, `32px`, `16px`, `8px`, `4px`]\n              const shadowArray = px.map((v) => `${shadow} 0px ${v} ${v} 0px`)\n\n              return <Card key={project.slug} eager={index === 0} item={project} overlay={val} shadow={shadowArray} />\n            })}\n          </Container>\n        </animated.div>\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Projects\n","import { graphql } from \"gatsby\"\nimport ProjectsComponent from \"../components/projects\"\n\nexport default ProjectsComponent\n\nexport const query = graphql`\n  query {\n    allProject(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 770, quality: 90)\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Projects from \"../../../components/projects\"\n\ntype Props = {\n  data: {\n    allProject: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function EmiliaCoreProjects({ ...props }: Props) {\n  const {\n    data: { allProject },\n  } = props\n\n  return <Projects projects={allProject.nodes} {...props} />\n}\n","import * as React from \"react\"\n\nconst Location = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon-location-pin\">\n    <path\n      className=\"primary\"\n      fill=\"currentColor\"\n      d=\"M5.64 16.36a9 9 0 1 1 12.72 0l-5.65 5.66a1 1 0 0 1-1.42 0l-5.65-5.66zM12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"\n    />\n    <path\n      className=\"secondary\"\n      fill=\"currentColor\"\n      d=\"M12 1a9 9 0 0 1 6.36 15.36l-5.65 5.66a1 1 0 0 1-.71.3V13a3 3 0 0 0 0-6V1z\"\n    />\n  </svg>\n)\n\nexport default Location\n","/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\nimport HeaderBackground from \"./header-background\"\nimport Location from \"../assets/location\"\nimport SocialMediaList from \"./social-media-list\"\n\ntype AvatarStaticQuery = {\n  file: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nconst Header = () => {\n  const { name, location, assetsPath } = useEmiliaConfig()\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\n    query {\n      file(name: { eq: \"avatar\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 140, height: 140, quality: 100)\n        }\n      }\n    }\n  `)\n\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeUpPropsDelay = useSpring({\n    config: config.slow,\n    delay: 250,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeProps = useSpring({ config: config.slow, from: { opacity: 0 }, to: { opacity: 1 } })\n  const fadeLongProps = useSpring({ config: config.slow, delay: 600, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Flex as=\"header\" variant=\"layout.projectHead\">\n      <HeaderBackground />\n      <div sx={{ textAlign: `center`, my: 5, zIndex: 10 }}>\n        <animated.div style={fadeProps}>\n          <div\n            sx={{\n              overflow: `hidden`,\n              borderRadius: `full`,\n              height: [`100px`, `140px`],\n              width: [`100px`, `140px`],\n              display: `inline-block`,\n              boxShadow: `lg`,\n              \"> div:not([data-placeholder='true'])\": {\n                height: [`100px !important`, `140px !important`],\n                width: [`100px !important`, `140px !important`],\n              },\n            }}\n          >\n            {avatar?.file?.childImageSharp?.gatsbyImageData ? (\n              <GatsbyImage image={avatar.file.childImageSharp.gatsbyImageData} alt=\"Avatar\" />\n            ) : (\n              <div\n                sx={{\n                  fontSize: 0,\n                  position: `absolute`,\n                  top: 0,\n                  left: 0,\n                  width: `100% !important`,\n                  right: 0,\n                  p: 3,\n                  backgroundColor: `red.2`,\n                }}\n                data-placeholder=\"true\"\n              >\n                Place an image with the name \"avatar\" inside the directory \"{assetsPath}\"\n              </div>\n            )}\n          </div>\n        </animated.div>\n        <animated.div style={fadeUpProps}>\n          <Heading as=\"h1\" variant=\"styles.h1\">\n            {name}\n          </Heading>\n        </animated.div>\n        <animated.div style={fadeUpPropsDelay}>\n          <Flex\n            sx={{\n              svg: {\n                width: `20px`,\n                height: `20px`,\n                \".primary\": { color: `iconPrimary` },\n                \".secondary\": { color: `iconSecondary` },\n                mr: 2,\n              },\n              justifyContent: `center`,\n              alignItems: `center`,\n              color: `text`,\n            }}\n          >\n            <Location /> {location}\n          </Flex>\n        </animated.div>\n        <div data-testid=\"social-header\" sx={{ mt: 4, mb: 6, a: { mx: 2 } }}>\n          <animated.div style={fadeLongProps}>\n            <SocialMediaList />\n          </animated.div>\n        </div>\n      </div>\n    </Flex>\n  )\n}\n\nexport default Header\n"],"names":["projects","fadeUpProps","useSpring","config","delay","from","opacity","transform","to","length","role","href","as","variant","animated","style","sx","mt","display","gridTemplateColumns","gridGap","alignItems","map","project","index","val","cover","childImageSharp","gatsbyImageData","backgroundColor","shadow","rgba","shadowArray","v","key","slug","eager","item","overlay","props","allProject","data","nodes","xmlns","viewBox","className","fill","d","useEmiliaConfig","name","location","assetsPath","avatar","useStaticQuery","fadeUpPropsDelay","fadeProps","fadeLongProps","textAlign","my","zIndex","overflow","borderRadius","height","width","boxShadow","file","G","image","alt","fontSize","position","top","left","right","p","svg","color","mr","justifyContent","mb","a","mx"],"sourceRoot":""}