{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-project-query-tsx-content-file-path-content-projects-insect-computer-hybrid-speaker-index-mdx-e3a54105d8a22f385c66.js","mappings":"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","sources":["webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/header-project.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/project-pagination.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/project.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/project.tsx","webpack://emilia/./content/projects/insect-computer-hybrid-speaker/index.mdx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/project-query.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { Flex, jsx, Container, Heading } from \"theme-ui\"\nimport { Themed } from \"@theme-ui/mdx\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport HeaderBackground from \"./header-background\"\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\nimport Svg from \"./svg\"\n\ntype HeaderProjectProps = {\n  title: string\n  areas: string[]\n  description?: string\n  date: string\n}\n\ntype AvatarStaticQuery = {\n  file: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nconst HeaderProject = ({ title, areas, description = ``, date }: HeaderProjectProps) => {\n  const { name } = useEmiliaConfig()\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\n    query {\n      file(name: { eq: \"avatar\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 40, height: 40, quality: 100)\n        }\n      }\n    }\n  `)\n\n  const titleProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const backButtonProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(-30px, 0, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const infoProps = useSpring({ config: config.slow, delay: 500, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Flex as=\"header\" variant=\"layout.header\">\n      <HeaderBackground />\n      <Container sx={{ textAlign: `center`, my: 4, zIndex: 10 }}>\n        <animated.div style={backButtonProps}>\n          <Link\n            to=\"/\"\n            aria-label={`${name} - Back to homepage`}\n            sx={{\n              display: `flex`,\n              alignItems: `center`,\n              color: `text`,\n              textDecoration: `none`,\n              svg: {\n                transition: `transform 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955)`,\n              },\n              \"&:hover, &:focus\": { svg: { transform: `translateX(-6px)` } },\n            }}\n          >\n            <Svg id=\"leftArrow\" width=\"20\" height=\"18\" />\n            <div\n              sx={{\n                overflow: `hidden`,\n                borderRadius: `full`,\n                width: `40px`,\n                height: `40px`,\n                display: `inline-block`,\n                boxShadow: `md`,\n                mx: 2,\n              }}\n            >\n              {avatar?.file?.childImageSharp?.gatsbyImageData && (\n                <GatsbyImage image={avatar.file.childImageSharp.gatsbyImageData} alt=\"Avatar\" />\n              )}\n            </div>\n            <span sx={{ fontWeight: `medium` }}>{name}</span>\n          </Link>\n        </animated.div>\n        <div sx={{ mt: 4, mb: [6, 6, 7] }}>\n          <animated.div style={titleProps}>\n            <Heading as=\"h1\" variant=\"styles.h1\">\n              {title}\n            </Heading>\n          </animated.div>\n          <animated.div style={infoProps}>\n            <Themed.p sx={{ mb: 0, mt: 4 }}>{date}</Themed.p>\n            <div>\n              {areas.map((area, index) => (\n                <React.Fragment key={area}>\n                  {index > 0 && `, `}\n                  {area}\n                </React.Fragment>\n              ))}\n            </div>\n            {description && (\n              <div sx={{ maxWidth: `900px`, mx: `auto`, mt: 5, p: { textAlign: `left`, overflowWrap: `break-word` } }}>\n                {description}\n              </div>\n            )}\n          </animated.div>\n        </div>\n      </Container>\n    </Flex>\n  )\n}\n\nexport default HeaderProject\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Card from \"./card\"\n\ntype ProjectPaginationProps = {\n  prev: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n  next: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n}\n\nconst ProjectPagination = ({ prev, next }: ProjectPaginationProps) => (\n  <div sx={{ mt: 6, mb: 4 }}>\n    <div sx={{ display: `grid`, gridTemplateColumns: `250px 1fr`, alignItems: `center`, mb: 4 }}>\n      <h2\n        sx={{\n          color: `textMuted`,\n          fontWeight: `medium`,\n          letterSpacing: `widest`,\n          textTransform: `uppercase`,\n          fontSize: 1,\n          my: 0,\n        }}\n      >\n        More Projects\n      </h2>\n      <div sx={{ width: `100%`, height: `2px`, backgroundColor: `muted` }} />\n    </div>\n    <div\n      sx={{\n        display: `grid`,\n        gridTemplateColumns: [`1fr`, `1fr`, `1fr 1fr`],\n        gridGap: [4, 4, 5],\n        a: { position: `relative` },\n        \"[data-name='card-overlay']\": {\n          position: `absolute`,\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        },\n      }}\n    >\n      {prev && <Card item={prev} />}\n      {next && <Card item={next} />}\n    </div>\n  </div>\n)\n\nexport default ProjectPagination\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Container } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport HeaderProject from \"./header-project\"\nimport ProjectPagination from \"./project-pagination\"\nimport Seo from \"./seo\"\n\nexport type EmiliaProjectProps = {\n  project: {\n    excerpt: string\n    date: string\n    slug: string\n    title: string\n    areas: string[]\n    cover: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n  images: {\n    nodes: {\n      name: string\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }[]\n  }\n}\n\nexport type EmiliaProjectPageContext = {\n  prev: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n  next: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n}\n\nconst Project: React.FC<React.PropsWithChildren<PageProps<EmiliaProjectProps, EmiliaProjectPageContext>>> = ({\n  data: { project, images },\n  pageContext: { prev, next },\n  children,\n}) => {\n  const imageFade = useSpring({ config: config.slow, delay: 800, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Layout>\n      <HeaderProject title={project.title} description={children} areas={project.areas} date={project.date} />\n      <Container sx={{ mt: [`-6rem`, `-6rem`, `-8rem`] }}>\n        {images.nodes.map((image) => (\n          <animated.div key={image.name} style={imageFade}>\n            <GatsbyImage\n              image={image.childImageSharp.gatsbyImageData}\n              alt={image.name}\n              sx={{ mb: [4, 4, 5], boxShadow: `xl` }}\n            />\n          </animated.div>\n        ))}\n        <ProjectPagination prev={prev} next={next} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Project\n\nexport const Head: HeadFC<EmiliaProjectProps> = ({ data: { project } }) => (\n  <Seo\n    title={project.title}\n    description={project.excerpt}\n    pathname={project.slug}\n    image={project.cover.childImageSharp.resize.src}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Project, { Head, EmiliaProjectProps, EmiliaProjectPageContext } from \"../../../components/project\"\n\nexport default function EmiliaCoreProject({ ...props }: PageProps<EmiliaProjectProps, EmiliaProjectPageContext>) {\n  return <Project {...props} />\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/wdhv4QByH6c\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowfullscreen: true\n  }), \"\\n\", React.createElement(_components.p, null, \"We propose \\\"Insect-Computer Hybrid Speaker\\\", which enables us to make musics made from combinations of computer and insects. Lots of studies have proposed methods and interfaces for controlling insects and obtaining feedback. However, there have been less research on the use of insects for interaction with third parties. In this paper, we propose a method in which cicadas are used as speakers triggered by using Electrical Muscle Stimulation (EMS). We explored and investigated the suitable waveform of chirp to be controlled, the appropriate voltage range, and the maximum pitch at which cicadas can chirp. As a demonstration, we let cicadas play Canon a 3 Violinis con Basso c. / Gigue（\", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=wdhv4QByH6c\"\n  }, \"Video\"), \"）.\"), \"\\n\", React.createElement(_components.p, null, \"これまでに，\\r\\n昆虫を制御する手法の研究,\\r\\nユーザが昆虫を制御するインターフェースの研究,\\r\\n制御に加え昆虫からユーザへのフィードバックを可能にする研究がされてきた.\\r\\nしかしながら,\\r\\n昆虫が人間同士のインタラクションの音声媒体として用いられることはなかった.\\r\\nこの論文では,\\r\\nElectrical Muscle Stimulation (EMS)を用いて蝉の発音筋を刺激し，\\r\\n蝉をスピーカとして使用する手法を提案する.\\r\\n蝉は発音筋を刺激されている最中であっても，鳴くのを止めたり，動いたり，自発的にいつものように動く事ができる．\\r\\n実際に,\\r\\n我々はパッヘルベルのカノンを蝉の力を借りて演奏した（\", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=wdhv4QByH6c\"\n  }, \"Video\"), \"）.\\r\\nこの技術を用いることにより,\\r\\n昆虫を媒体とした新しい人間間のインタラクションができる可能性が示された.\"), \"\\n\", React.createElement(_components.p, null, \"Paper page(IICW_9.pdf): \", React.createElement(_components.a, {\n    href: \"https://sites.google.com/view/acm-chi-iicw21/home\"\n  }, \"https://sites.google.com/view/acm-chi-iicw21/home\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"D:/a/nawta.github.io/nawta.github.io/content/projects/insect-computer-hybrid-speaker/index.mdx\";\nimport ProjectComponent, {Head} from \"../components/project\";\nProjectComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2283158628\";\n"],"names":["_ref","_avatar$file","_avatar$file$childIma","title","areas","description","date","name","useEmiliaConfig","avatar","useStaticQuery","titleProps","useSpring","config","from","opacity","transform","to","backButtonProps","infoProps","delay","jsx","Flex","as","variant","HeaderBackground","Container","sx","textAlign","my","zIndex","animated","style","Link","display","alignItems","color","textDecoration","svg","transition","Svg","id","width","height","overflow","borderRadius","boxShadow","mx","file","childImageSharp","gatsbyImageData","GatsbyImage","image","alt","fontWeight","mt","mb","Heading","Themed","map","area","index","React","key","maxWidth","p","overflowWrap","prev","next","gridTemplateColumns","letterSpacing","textTransform","fontSize","backgroundColor","gridGap","a","position","top","left","right","bottom","Card","item","data","project","images","pageContext","children","imageFade","Layout","HeaderProject","nodes","ProjectPagination","Head","_ref2","Seo","excerpt","pathname","slug","cover","resize","src","EmiliaCoreProject","props","Project","_createMdxContent","_components","Object","assign","_provideComponents","components","frameborder","allow","allowfullscreen","href","wrapper","MDXLayout","GatsbyMDXWrapper","ProjectComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}